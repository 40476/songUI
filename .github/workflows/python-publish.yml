name: Upload Python Package

on:
  workflow_dispatch:
    inputs:
      logLevel:
        required: true
        type: choice
        options:
        # - info
        # - warning
        - debug
  release:
    types: [published]

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Set version from release tag
        if: ${{ github.event_name == 'release' }}
        run: |
          RELEASE_TAG="${GITHUB_REF#refs/tags/}"
          # Remove leading "v" if your tags are like "v1.2.3"
          VERSION="${RELEASE_TAG#v}"
          echo "Setting version to $VERSION"
          # Use sed to update the version in pyproject.toml (replace existing version line or add if missing)
          if grep -q '^version *= *' pyproject.toml; then
            sed -i "s/^version *= *.*/version = \"$VERSION\"/" pyproject.toml
          else
            sed -i "/^\[project\]/a version = \"$VERSION\"" pyproject.toml
          fi
          cat pyproject.toml

      - name: Build release distributions
        run: |
          python -m pip install build
          python -m build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      contents: read

    environment:
      name: pypi
      url: https://pypi.org/project/songui/
    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: dist/